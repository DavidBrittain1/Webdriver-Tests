// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using NFocusDemo.utils;

namespace NFocusDemo.Webdrivertests
{
    [TestFixture]
    internal class FormsTest : base_test
    {
        //private IWebDriver driver;
        //public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            driver = new ChromeDriver();
            js = (IJavaScriptExecutor)driver;
            //vars = new Dictionary<string, object>();
        }
        [TearDown]
        protected void TearDown()
        {
            driver.Quit();
        }
        [Test]
        public void forms()
        {
            // Test name: Forms
            // Step # | name | target | value
            // 1 | open | /webdriver2/ | 
            driver.Navigate().GoToUrl("https://www.edgewordstraining.co.uk/webdriver2/");
            // 2 | setWindowSize | 1334x913 | 
            //driver.Manage().Window.Size = new System.Drawing.Size(1334, 913);
            driver.Manage().Window.Maximize();
            // 3 | click | css=.last span | 
            driver.FindElement(By.CssSelector(".last span")).Click();
            // 4 | click | id=header | 
            driver.FindElement(By.Id("header")).Click();
            // 5 | click | css=li:nth-child(3) span | 
            driver.FindElement(By.CssSelector("li:nth-child(3) span")).Click();
            // 6 | click | id=textInput | 
            driver.FindElement(By.Id("textInput")).Click();
            // 7 | type | id=textInput | David
            driver.FindElement(By.Id("textInput")).SendKeys("David");
            // 8 | type | id=textArea | some 
            driver.FindElement(By.Id("textArea")).SendKeys("some ");
            // 9 | click | id=textArea | 
            driver.FindElement(By.Id("textArea")).Click();
            // 10 | type | id=textArea | some \ntext
            driver.FindElement(By.Id("textArea")).SendKeys("some \\ntext");
            // 11 | click | id=checkbox | 
            driver.FindElement(By.Id("checkbox")).Click();
            // 12 | click | id=select | 
            driver.FindElement(By.Id("select")).Click();
            // 13 | select | id=select | label=Selection Two
            {
                var dropdown = driver.FindElement(By.Id("select"));
                dropdown.FindElement(By.XPath("//option[. = 'Selection Two']")).Click();
            }
            // 14 | click | id=three | 
            driver.FindElement(By.Id("three")).Click();
            // 15 | click | id=password | 
            driver.FindElement(By.Id("password")).Click();
            // 16 | click | linkText=Submit | 
            driver.FindElement(By.LinkText("Submit")).Click();
            // 17 | click | id=main-page | 
            driver.FindElement(By.Id("main-page")).Click();
            // 18 | click | id=main-page | 
            driver.FindElement(By.Id("main-page")).Click();
            // 19 | click | id=textInputValue | 
            driver.FindElement(By.Id("textInputValue")).Click();
            // 20 | click | id=textInputValue | 
            driver.FindElement(By.Id("textInputValue")).Click();
            // 21 | doubleClick | id=textInputValue | 
            {
                var element = driver.FindElement(By.Id("textInputValue"));
                Actions builder = new Actions(driver);
                builder.DoubleClick(element).Perform();
            }
            // 22 | assertText | id=textInputValue | David
            Assert.That(driver.FindElement(By.Id("textInputValue")).Text, Is.EqualTo("David"));
            // 23 | click | linkText=Home | 
            driver.FindElement(By.LinkText("Home")).Click();
        }
    }
}